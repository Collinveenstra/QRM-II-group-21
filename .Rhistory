system.time({
while reps>0{}
reps=10
system.time({
while reps>0{
reps=10
system.time({
while reps>0 {
reps=10
system.time({
while reps > 0 {
reps=10
system.time({
while reps > 0 {
file_size_1=1500
file_size_2=500
if (file_size_1>1000){
print("file size too large")
}
file_size_1=1500
file_size_2=500
if (file_size_1>1000){
print("file size too large")
}else{
print("file size is within limits")
}
file_size_1=1500
file_size_2=500
if (file_size_2>1000){
print("file size too large")
}else{
print("file size is within limits")
}
file_size_1=1500
file_size_2=500
file_size_3=0
file_evaluator=function(file_size){
if (file size == 0){
file_size_1=1500
file_size_2=500
file_size_3=0
file_evaluator=function(file_size){
if (file_size == 0){
print ("No file detected")
}
else if (file_size_2>1000){
print("file size too large")
}else{
print("file size is within limits")
}
}
file_evaluator(file_size_2)
file_evaluator(file_size_1)
file_size_1=1500
file_size_2=500
file_size_3=0
file_evaluator=function(file_size){
if (file_size == 0){
print ("No file detected")
}
else if (file_size>1000){
print("file size too large")
}else{
print("file size is within limits")
}
}
file_evaluator(file_size_1)
file_evaluator(file_size_3)
flights$delayed=ifelse
flights$delayed=ifelse(flights$dep_delay>0,1,0)
flights
flights$delayed=ifelse(flights$dep_delay>0,1,0)
View(flights)
nums=c(5,-2,8,-1,3)
for (n in nums){
if(n<0){
next
}
print (n)
}
count=1
while(count>0){
print(count)
if (count>100){
break
}
count=count+1
}
a=TRUE
b=FALSE
a
class(a)
b
class(b)
a="true"
a
true
x=5
x>3
x==10
x!=10
as.numeric(TRUE)
as.numeric(FALSE)
TRUE+7
nums=c(5,12,18,7,9)
nums>10
nums(nums>10)
nums=nums>10
nums[nums>10]
nums=c(5,12,18,7,9)
nums[nums>10]
a="Hello"
b="world"
c="How's it going"
abc
a
b
c
a,b,c
worldlist=c("cat","dog","caterpillar","fish")
grep("cat",worldlist)
grepl("cat", worldlist)
text="the cat sat on the catmat"
sub("cat","dog",text)
gsub("cat","dog",text)
text="the catmat sat on the cat"
sub("cat","dog",text)
gsub("cat","dog",text)
a="Hello"
b="world"
c="what's up"
paste(a,b,c)
paste(a,b,c, sep="/")
paste(a,b,c, sep="_")
paste0(a,b,c)
"Hello"+3
"Hello"+"3"
x=c(1,2,NA,4)
x
mean(x)
mean(x,na.rm(NA))
mean(x,na.rm=TRUE)
y=NULL
y
length(y)
x=c(1,2,NULL,4)
x
z=0/0
z
is.nan(z)
is.na(z)
x=5
x
class(x)
y=5L
y
class(y)
x=x+8
x
class(x)
y=y+8
y
class(y)
y=y+8-8
y
class(y)
x=x+8L
x
class(x)
my_mat=matrix(1:16,nrow=4,bycol=TRUE)
my_mat=matrix(1:16,nrow=4)
View my_matrix
View=my_matrix
df = datasets::sleep
View(df)
df = datasets::state.x77
View(df)
df = datasets::sunspot.year
df = MASS::Cars93
View(df)
1+1
setwd("~/GitHub/QRM-II-group-21")
knitr::opts_chunk$set(echo = TRUE)
movies <- read.table("movies1.tsv", header=TRUE)
head(movies)
ncol(movies)
nrow(movies)
#WRITE YOUR CODE HERE
str(movies)
library(tidyverse)
movies$profit = movies$revenue - movies$budget
movies %>%
summarise(mean(profit),
median(profit),
min(profit),
max(profit))
#WRITE YOUR CODE HERE
<<<<<<< HEAD
Nominal: orginal_language
Inverval: release_year
Ratio: vote_count
boxplot(movies$profit)
boxplot(movies$profit, main='Variable Profit')
boxplot(movies$profit,
main='Variable Profit',
ylab="Profit",
xlab="Movies")
boxplot(movies$profit,
horizontal = TRUE,
main='Variable Profit',
ylab="Profit",
xlab="Movies")
Q1 = quantile(movies$profit, 0.25)
Q1 = quantile(movies$profit, 0.25)
Q1
Q2 = quantile(movies$profit, 0.50)
Q2
Q1 = quantile(movies$profit, 0.25)
Q2 = quantile(movies$profit, 0.50)
Q3 = quantile(movies$profit, 0,75)
Q4 = max(movies$profit)
knitr::opts_chunk$set(echo = TRUE)
=======
max_profit = max(movies$profit)
min_profit = min(movies$profit)
movies %>%
filter(profit == max_profit) %>%
select(title, profit)
movies %>%
filter(profit == min_profit) %>%
select(title, profit)
#WRITE YOUR CODE HERE
>>>>>>> e108c9ab57b93ee79ebf9b47010191e8ff042bdf
boxplot(movies$profit,
main="Variable Profit",
ylab="Profit",
xlab="Movies")
Q1 = quantile(movies$profit, 0.25)
Q2 = quantile(movies$profit, 0.50)
<<<<<<< HEAD
Q3 = quantile(movies$profit, 0,75)
Q4 = max(movies$profit)
boxplot(movies$profit,
log = y,
main='Variable Profit',
ylab="Profit",
xlab="Movies")
boxplot(movies$profit,
log = "y",
main='Variable Profit',
ylab="Profit",
xlab="Movies")
boxplot(movies$profit,
main='Variable Profit',
ylab="Profit",
xlab="Movies",
outline = FALSE)
boxplot(movies$profit,
main='Variable Profit',
ylab="Profit",
xlab="Movies",
outline = FALSE)
Q1
Q3 = quantile(movies$profit, 0.75)
boxplot(movies$profit,
main='Variable Profit',
ylab="Profit",
xlab="Movies")
=======
Q3 = quantile(movies$profit, 0.75)
Q4 = max(movies$profit)
Q1
Q2
Q3
Q4
>>>>>>> e108c9ab57b93ee79ebf9b47010191e8ff042bdf
boxplot(movies$profit,
main='Variable Profit',
ylab="Profit",
xlab="Movies",
outline = FALSE)
<<<<<<< HEAD
boxplot(movies$profit,
main='Variable Profit',
ylab="Profit",
xlab="Movies")
boxplot(movies$profit,
main='Variable Profit',
ylab="Profit",
xlab="Movies",
outline = FALSE)
movies %>%
summarise(mean_profits = mean(log_profits[is.finite(log_profits)], na.rm = TRUE))
library(tidyverse)
movies$log_profits = log(movies$profit)
movies %>%
summarise(mean_profits = mean(log_profits[is.finite(log_profits)], na.rm = TRUE))
View(movies)
movies$log_profits <=0 = NA
[movies$log_profits <= 0] = NA
(movies$log_profits <= 0) = NA
(movies$log_profits <= 0) = NA
movies$log_profits <= 0 <- NA
library (tidyverse)
movies$log_profits <= 0 <- NA
movies$log_profits[movies$log_profits<=0]<- NA
movies$log_profits[movies$log_profits = NaN]<- NA
movies$log_profits[movies$log_profits == NaN]<- NA
movies$log_profits[movies$log_profits<=0 | movies$log_profits==NaN]<- NA
movies$log_profits[movies$log_profits<=0 | movies$log_profits==NaN]<- NA
movies$log_profits[movies$log_profits<=0 | movies$log_profits==NaN ]<- NA
movies$log_profits[movies$log_profits == NaN]<- NA
movies$log_profits[movies$log_profits == NaN]<- NA
View(movies)
=======
movies$log_profits = log(movies$profit)
movies %>%
summarise(mean_profits = mean(log_profits[is.finite(log_profits)], na.rm = TRUE))
#WRITE YOUR CODE HERE
movies$log_profits[movies$log_profits<=0]<- NA
>>>>>>> e108c9ab57b93ee79ebf9b47010191e8ff042bdf
movies$log_profits[is.nan(movies$log_profits)] <- NA
mean(movies$log_profits, na.rm = TRUE)
boxplot(movies$log_profits,
main = "Log of Profits",
xlab = "Movies",
ylab = "Log of Profits")
<<<<<<< HEAD
=======
#WRITE YOUR CODE HERE
ggplot(movies, aes(x=runtime, y=vote_average))+
geom_point()+
geom_smooth(method="lm", se=T)
#WRITE YOUR CODE HERE
head(movies$index, n = 10)
#WRITE YOUR CODE HERE
actor_counts <- sort(table(movies$first_actor), decreasing = TRUE)
head(actor_counts, 1)
#WRITE YOUR CODE HERE
average_revenue<- movies %>%
filter(first_actor=="Bruce Willis") %>%
summarise(average_revenue_Bruce=mean(revenue, na.rm=T))
mean(movies$revenue)
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
movies <- read.table("movies1.tsv", header=TRUE)
head(movies)
number_variables = ncol(movies)
number_subjects = nrow(movies)
movies <- read.table("movies1.tsv", header=TRUE)
head(movies)
ncol(movies)
nrow(movies)
movies %>%
summarise(mean_profits = mean(log_profits))
movies %>%
summarise(mean_profits = mean(movies$log_profits))
movies$log_profits = log(movies$profit)
movies %>%
summarise(mean_profits = mean(movies$log_profits))
movies %>%
summarise(mean_profits = mean(log_profits[is.finite(log_profits)], na.rm = TRUE))
movies$log_profits = log(movies$profit)
movies %>%
summarise(mean_profits = mean(movies$log_profits))
movies %>%
summarise(mean_profits2 = mean(log_profits[is.finite(log_profits)], na.rm = TRUE))
View(movies)
knitr::opts_chunk$set(echo = TRUE)
movies <- read.table("movies1.tsv", header=TRUE)
head(movies)
ncol(movies)
nrow(movies)
#WRITE YOUR CODE HERE
str(movies)
library(tidyverse)
movies$profit = movies$revenue - movies$budget
movies %>%
summarise(mean(profit),
median(profit),
min(profit),
max(profit))
#WRITE YOUR CODE HERE
max_profit = max(movies$profit)
min_profit = min(movies$profit)
movies %>%
filter(profit == max_profit) %>%
select(title, profit)
movies %>%
filter(profit == min_profit) %>%
select(title, profit)
#WRITE YOUR CODE HERE
boxplot(movies$profit,
main="Variable Profit",
ylab="Profit",
xlab="Movies")
Q1 = quantile(movies$profit, 0.25)
Q2 = quantile(movies$profit, 0.50)
Q3 = quantile(movies$profit, 0.75)
Q4 = max(movies$profit)
Q1
Q2
Q3
Q4
boxplot(movies$profit,
main='Variable Profit',
ylab="Profit",
xlab="Movies",
outline = FALSE)
movies$log_profits = log(movies$profit)
movies %>%
summarise(mean_profits = mean(movies$log_profits))
movies %>%
summarise(mean_profits2 = mean(log_profits[is.finite(log_profits)], na.rm = TRUE))
#WRITE YOUR CODE HERE
movies$log_profits[movies$log_profits<=0]<- NA
movies$log_profits[is.nan(movies$log_profits)] <- NA
mean(movies$log_profits, na.rm = TRUE)
>>>>>>> e108c9ab57b93ee79ebf9b47010191e8ff042bdf
boxplot(movies$log_profits,
main = "Log of Profits",
xlab = "Movies",
ylab = "Log of Profits")
<<<<<<< HEAD
ncol(movies)
nrow(movies)
head(movies$index, n = 10)
=======
#WRITE YOUR CODE HERE
ggplot(movies, aes(x=runtime, y=vote_average))+
geom_point()+
geom_smooth(method="lm", se=T)
#WRITE YOUR CODE HERE
head(movies$index, n = 10)
#WRITE YOUR CODE HERE
actor_counts <- sort(table(movies$first_actor), decreasing = TRUE)
head(actor_counts, 1)
#WRITE YOUR CODE HERE
average_revenue<- movies %>%
filter(first_actor=="Bruce Willis") %>%
summarise(average_revenue_Bruce=mean(revenue, na.rm=T))
mean(movies$revenue)
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
View(movies)
#WRITE YOUR CODE HERE
actor_counts <- sort(table(movies$first_actor), decreasing = TRUE)
head(actor_counts, 1)
#WRITE YOUR CODE HERE
average_revenue<- movies %>%
filter(first_actor=="Bruce Willis") %>%
summarise(average_revenue_Bruce=mean(revenue, na.rm=T))
mean(movies$revenue)
View(average_revenue)
#WRITE YOUR CODE HERE
movies %>%
filter(first_actor=="Bruce Willis") %>%
summarise(average_revenue_Bruce=mean(revenue, na.rm=T))
mean(movies$revenue)
>>>>>>> e108c9ab57b93ee79ebf9b47010191e8ff042bdf
