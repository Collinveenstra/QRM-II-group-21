\Y
is_tinytex()
install_tinytex()
ggplot(movies, aes(x = first_actor_gender, y = log_profits))
library(tidyverse)
ggplot(movies, aes(x = first_actor_gender, y = log_profits))
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) + stat_summary(fun = mean, geom = "point", size = 3)
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) + stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0,2)+
labs (x = "Gender of First Actor", y = "Log (Profit)",
title = "Mean Log (Profit) by First Actor Gender with 95% Confidence Interval") +
theme_minimal()
rlang::last_trace()
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) + stat_summary(fun = mean, geom = "point", size = 3) +
labs (x = "Gender of First Actor", y = "Log (Profit)",
title = "Mean Log (Profit) by First Actor Gender with 95% Confidence Interval") +
theme_minimal()
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) + stat_summary(fun = mean, geom = "point", size = 3) +
labs (x = "Gender of First Actor", y = "Log (Profit)",
title = "Mean Log (Profit) by First Actor Gender with 95% Confidence Interval") +
theme_minimal()
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) + stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0,2)+
labs (x = "Gender of First Actor", y = "Log (Profit)",
title = "Mean Log (Profit) by First Actor Gender with 95% Confidence Interval") +
theme_minimal()
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) + stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0,2)+
labs (x = "Gender of First Actor", y = "Log (Profit)",
title = "Mean Log (Profit) by First Actor Gender with 95% Confidence Interval") +
theme_minimal()
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) + stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0,2)+
labs (x = "Gender of First Actor", y = "Log (Profit)",
title = "Mean Log (Profit) by First Actor Gender with 95% Confidence Interval") +
theme_minimal()
movies$first_actor_gender <- factor(movies$first_actor, labels = c("Female", "Male"))
movies$log_budget <- log(movies$budget)
movies <- subset(movies, budget >0)
movies$log_budget <- log(movies$budget)
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) +
stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2) +
labs(x = "Gender of First Actor", y = "Log of Budget"), title = "Mean Log of Budget by First Actor Gender wit 95% Confidence Interval"
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) +
stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2)
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) +
stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2) +
labs(x = "Gender of First Actor", y = "Log of Budget",
title = "Mean Log of Budget by First Actor Gender with 95% Confidence Interval")
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) +
stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2) +
labs(x = "Gender of First Actor", y = "Log of Budget",
title = "Mean Log of Budget by First Actor Gender with 95% Confidence Interval") + theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
#WRITE YOUR CODE HERE
install.packages("Hmisc")
library (tidyverse)
library (Hmisc)
movies <- subset(movies, budget >0)
movies$log_budget <- log(movies$budget)
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) +
stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2) +
labs(x = "Gender of First Actor", y = "Log of Budget",
title = "Mean Log of Budget by First Actor Gender with 95% Confidence Interval")
install.packages("Hmisc")
knitr::opts_chunk$set(echo = TRUE)
#WRITE YOUR CODE HERE
install.packages("Hmisc")
library (tidyverse)
library (Hmisc)
movies <- subset(movies, budget >0)
movies$log_budget <- log(movies$budget)
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) +
stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2) +
labs(x = "Gender of First Actor", y = "Log of Budget",
title = "Mean Log of Budget by First Actor Gender with 95% Confidence Interval")
#WRITE YOUR CODE HERE
install.packages("Hmisc")
library (tidyverse)
library (Hmisc)
movies <- subset(movies, budget >0)
movies$log_budget <- log(movies$budget)
ggplot(movies, aes(x = first_actor_gender, y = log_budget)) +
stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2) +
labs(x = "Gender of First Actor", y = "Log of Budget",
title = "Mean Log of Budget by First Actor Gender with 95% Confidence Interval")
install.packages("Hmisc")
model <- lm(log_budget ~ movies$first_actor_gender == "Male", data = movies)
View(model)
summary(model)
knitr::opts_chunk$set(echo = TRUE)
#WRITE YOUR CODE HERE
movies <- read.table("movies1.tsv", header=TRUE)
model <- lm(revenue ~ budget, data = movies)
summary(model)
#WRITE YOUR CODE HERE
summary(model)
#WRITE YOUR CODE HERE
summary(model)
#WRITE YOUR CODE HERE
summary(model)
coefs <- summary(model)$coefficients
t_val <- coefs["Budget", "t value"]
t_val <- coefs["budget", "t value"]
p_value <- pt(t_val, df = model$df.residual, lower.tail = TRUE)
p_value
p_value <- pt(t_val, df = model$df.residual, lower.tail = FALSE)
#WRITE YOUR CODE HERE
coefs <- summary(model)$coefficients
t_val <- coefs["budget", "t value"]
p_value <- pt(t_val, df = model$df.residual, lower.tail = FALSE)
print(p_value)
View(movies)
#WRITE YOUR CODE HERE
movies$profit <- movies$revenue - movies$budget
View(movies)
#WRITE YOUR CODE HERE
movies$profit <- movies$revenue - movies$budget
movies$LogProfit <- ifelse(movies$profit > 0, log(movies$profit), NA)
movies$LogBudget <- ifelse(movies$budget > 0, log(movies$budget), NA)
View(movies)
View(movies)
#WRITE YOUR CODE HERE
movies$profit <- movies$revenue - movies$budget
movies$LogProfit <- ifelse(movies$profit > 0, log(movies$profit), NA)
movies$LogBudget <- ifelse(movies$budget > 0, log(movies$budget), NA)
model_log <- lm(LogProfit ~ LogBudget, data = movies)
summary(model_log)
#WRITE YOUR CODE HERE
coefs <- summary(model)$coefficients
t_val <- coefs["budget", "t value"]
p_value <- pt(t_val, df = model$df.residual, lower.tail = FALSE)
print(p_value)
#WRITE YOUR CODE HERE
movies$profit <- movies$revenue - movies$budget
movies$LogProfit <- ifelse(movies$profit > 0, log(movies$profit), NA)
movies$LogBudget <- ifelse(movies$budget > 0, log(movies$budget), NA)
model_log <- lm(LogProfit ~ LogBudget, data = movies)
summary(model_log)
#WRITE YOUR CODE HERE
movies <- read.table("movies1.tsv", header=TRUE)
model <- lm(revenue ~ budget, data = movies)
summary(model)
#WRITE YOUR CODE HERE
profits_by_month<- movies %>%
group_by(release_month) %>%
summarise(meanrevenue=mean(revenue,na.rm=T))
ggplot(profits_by_month, aes(x=factor(release_month), y=meanrevenue))+
geom_col(fill="blue")+
labs(
title="Average revenue per month",
x="Release month",
y="Average profit"
)+
theme_minimal()
#WRITE YOUR CODE HERE
str(movies)
movies$english<- as.factor(movies$english)
#WRITE YOUR CODE HERE
model<- lm(log_revenue~log_budget + english+release_month, data=movies)
summary(model)
#WRITE YOUR CODE HERE
profits_by_month<- movies %>%
group_by(release_month) %>%
summarise(meanrevenue=mean(revenue,na.rm=T))
ggplot(profits_by_month, aes(x=factor(release_month), y=meanrevenue))+
geom_col(fill="blue")+
labs(
title="Average revenue per month",
x="Release month",
y="Average profit"
)+
theme_minimal()
library(tidyverse)
#WRITE YOUR CODE HERE
profits_by_month<- movies %>%
group_by(release_month) %>%
summarise(meanrevenue=mean(revenue,na.rm=T))
ggplot(profits_by_month, aes(x=factor(release_month), y=meanrevenue))+
geom_col(fill="blue")+
labs(
title="Average revenue per month",
x="Release month",
y="Average profit"
)+
theme_minimal()
#WRITE YOUR CODE HERE
str(movies)
movies$english<- as.factor(movies$english)
#WRITE YOUR CODE HERE
model<- lm(log_revenue~log_budget + english+release_month, data=movies)
summary(model)
View(movies)
movies$log_revenue<- log(movies$revenue)
movies$log_budget<-log(movies$budget)
movies<- movies[movies$profit>0&movies$budget >0,]
model<- lm(log_revenue~log_budget+english+release_month, data=movies)
summary(model)
movies$english<- as.factor(movies$english)
#WRITE YOUR CODE HERE
str(movies)
movies$english<- as.factor(movies$english)
summary(movies)
movies$log_revenue<- log(movies$revenue)
movies$log_budget<-log(movies$budget)
movies<- movies[movies$profit>0&movies$budget >0,]
model<- lm(log_revenue~log_budget+english+release_month, data=movies)
#WRITE YOUR CODE HERE
model<- lm(log_revenue~log_budget + english+release_month, data=movies)
knitr::opts_chunk$set(echo = TRUE)
#WRITE YOUR CODE HERE
profits_by_month<- movies %>%
group_by(release_month) %>%
summarise(meanrevenue=mean(revenue,na.rm=T))
ggplot(profits_by_month, aes(x=factor(release_month), y=meanrevenue))+
geom_col(fill="blue")+
labs(
title="Average revenue per month",
x="Release month",
y="Average profit"
)+
theme_minimal()
#WRITE YOUR CODE HERE
library(tidyverse)
profits_by_month<- movies %>%
group_by(release_month) %>%
summarise(meanrevenue=mean(revenue,na.rm=T))
ggplot(profits_by_month, aes(x=factor(release_month), y=meanrevenue))+
geom_col(fill="blue")+
labs(
title="Average revenue per month",
x="Release month",
y="Average profit"
)+
theme_minimal()
View(movies)
movies$english <- ifelse(movies$original_language = "en", 1, 0)
movies$english <- ifelse(movies$original_language == "en", 1, 0)
#WRITE YOUR CODE HERE
str(movies)
movies$english <- ifelse(movies$original_language == "en", 1, 0)
movies$english<- as.factor(movies$english)
summary(movies)
movies$log_revenue<- log(movies$revenue)
movies$log_budget<-log(movies$budget)
movies<- movies[movies$profit>0&movies$budget >0,]
model<- lm(log_revenue~log_budget+english+release_month, data=movies)
#WRITE YOUR CODE HERE
str(movies)
movies$english <- ifelse(movies$original_language == "en", 1, 0)
movies$english<- as.factor(movies$english)
summary(movies)
movies$log_revenue<- log(movies$revenue)
movies$log_budget<-log(movies$budget)
movies<- movies[movies$profit>0&movies$budget >0,]
model<- lm(log_revenue ~ log_budget + english + release_month, data=movies)
#WRITE YOUR CODE HERE
movies$profit <- movies$revenue - movies$budget
movies$LogProfit <- ifelse(movies$profit > 0, log(movies$profit), NA)
movies$LogBudget <- ifelse(movies$budget > 0, log(movies$budget), NA)
model_log <- lm(LogProfit ~ LogBudget, data = movies)
#WRITE YOUR CODE HERE
movies <- read.table("movies1.tsv", header=TRUE)
model <- lm(revenue ~ budget, data = movies)
summary(model)
#WRITE YOUR CODE HERE
movies$profit <- movies$revenue - movies$budget
movies$LogProfit <- ifelse(movies$profit > 0, log(movies$profit), NA)
movies$LogBudget <- ifelse(movies$budget > 0, log(movies$budget), NA)
model_log <- lm(LogProfit ~ LogBudget, data = movies)
summary(model_log)
#WRITE YOUR CODE HERE
str(movies)
movies$english <- ifelse(movies$original_language == "en", 1, 0)
movies$english<- as.factor(movies$english)
summary(movies)
movies<- movies[movies$profit>0&movies$budget >0,]
model<- lm(log_revenue ~ log_budget + english + release_month, data=movies)
summary(model)
View(movies)
movies$LogRevenue <- ifelse(movies$revenue > 0, log(movies$revenue), NA)
#WRITE YOUR CODE HERE
str(movies)
movies$english <- ifelse(movies$original_language == "en", 1, 0)
movies$english<- as.factor(movies$english)
summary(movies)
movies$LogRevenue <- ifelse(movies$revenue > 0, log(movies$revenue), NA)
movies<- movies[movies$profit>0&movies$budget >0,]
model<- lm(log_revenue ~ log_budget + english + release_month, data=movies)
summary(model)
#WRITE YOUR CODE HERE
str(movies)
movies$english <- ifelse(movies$original_language == "en", 1, 0)
movies$english<- as.factor(movies$english)
summary(movies)
movies$LogRevenue <- ifelse(movies$revenue > 0, log(movies$revenue), NA)
movies<- movies[movies$profit>0&movies$budget >0,]
model<- lm(LogRevenue ~ LogBudget + english + release_month, data=movies)
summary(model)
#WRITE YOUR CODE HERE
model<- lm(LogRevenue~LogBudget + english+release_month, data=movies)
summary(model)
knitr::opts_chunk$set(echo = TRUE)
#WRITE YOUR CODE HERE
movies <- read.table("movies1.tsv", header=TRUE)
model <- lm(revenue ~ budget, data = movies)
summary(model)
#WRITE YOUR CODE HERE
summary(model)
#WRITE YOUR CODE HERE
coefs <- summary(model)$coefficients
t_val <- coefs["budget", "t value"]
p_value <- pt(t_val, df = model$df.residual, lower.tail = FALSE)
print(p_value)
#WRITE YOUR CODE HERE
movies$profit <- movies$revenue - movies$budget
movies$LogProfit <- ifelse(movies$profit > 0, log(movies$profit), NA)
movies$LogBudget <- ifelse(movies$budget > 0, log(movies$budget), NA)
model_log <- lm(LogProfit ~ LogBudget, data = movies)
summary(model_log)
#WRITE YOUR CODE HERE
library(tidyverse)
profits_by_month<- movies %>%
group_by(release_month) %>%
summarise(meanrevenue=mean(revenue,na.rm=T))
ggplot(profits_by_month, aes(x=factor(release_month), y=meanrevenue))+
geom_col(fill="blue")+
labs(
title="Average revenue per month",
x="Release month",
y="Average profit"
)+
theme_minimal()
#WRITE YOUR CODE HERE
str(movies)
movies$english <- ifelse(movies$original_language == "en", 1, 0)
movies$english<- as.factor(movies$english)
summary(movies)
movies$LogRevenue <- ifelse(movies$revenue > 0, log(movies$revenue), NA)
movies<- movies[movies$profit>0&movies$budget >0,]
model<- lm(LogRevenue ~ LogBudget + english + release_month, data=movies)
summary(model)
#WRITE YOUR CODE HERE
movies$english <- ifelse(movies$original_language == "en", 1, 0)
movies$english<- as.factor(movies$english)
summary(movies)
movies$LogRevenue <- ifelse(movies$revenue > 0, log(movies$revenue), NA)
movies<- movies[movies$profit>0&movies$budget >0,]
model<- lm(LogRevenue ~ LogBudget + english + release_month, data=movies)
summary(model)
#WRITE YOUR CODE HERE
model<- lm(LogRevenue~LogBudget + english+release_month, data=movies)
summary(model)
#WRITE YOUR CODE HERE
movies$release_month <- factor(movies$release_month)
model_flex <- lm(LogRevenue ~ LogBudget + english + release_month, data = movies)
#WRITE YOUR CODE HERE
movies$release_month <- factor(movies$release_month)
model_flex <- lm(LogRevenue ~ LogBudget + english + release_month, data = movies)
summary(model)
summary(model)
#WRITE YOUR CODE HERE
movies$release_month <- factor(movies$release_month)
model_flex <- lm(LogRevenue ~ LogBudget + english + release_month, data = movies)
summary(model_flex)
linearHypothesis(model_flex,
c("release_month2 = 0", "release_month3 = 0", "release_month4 = 0",
"release_month5 = 0", "release_month6 = 0", "release_month7 = 0",
"release_month8 = 0", "release_month9 = 0", "release_month10 = 0",
"release_month11 = 0", "release_month12 = 0"))
#WRITE YOUR CODE HERE
movies$release_month <- factor(movies$release_month)
model_flex <- lm(LogRevenue ~ LogBudget + english + release_month, data = movies)
summary(model_flex)
anova(model, model_flex)
View(model_log)
#WRITE YOUR CODE HERE
model<- lm(LogRevenue~LogBudget + english+release_month, data=movies)
summary(model)
#WRITE YOUR CODE HERE
movies$english <- ifelse(movies$original_language == "en", 1, 0)
movies$english<- as.factor(movies$english)
summary(movies)
movies$LogRevenue <- ifelse(movies$revenue > 0, log(movies$revenue), NA)
movies<- movies[movies$profit>0&movies$budget >0,]
model<- lm(LogRevenue ~ LogBudget + english + release_month, data=movies)
summary(model)
#WRITE YOUR CODE HERE
model_flex <- lm(LogRevenue ~ LogBudget + english + as.factor(release_month), data = movies)
summary(model_flex)
anova(model, model_flex)
knitr::opts_chunk$set(echo = TRUE)
#WRITE YOUR CODE HERE
movies <- read.table("movies1.tsv", header=TRUE)
model <- lm(revenue ~ budget, data = movies)
summary(model)
#WRITE YOUR CODE HERE
summary(model)
#WRITE YOUR CODE HERE
coefs <- summary(model)$coefficients
t_val <- coefs["budget", "t value"]
p_value <- pt(t_val, df = model$df.residual, lower.tail = FALSE)
print(p_value)
#WRITE YOUR CODE HERE
movies$profit <- movies$revenue - movies$budget
movies$LogProfit <- ifelse(movies$profit > 0, log(movies$profit), NA)
movies$LogBudget <- ifelse(movies$budget > 0, log(movies$budget), NA)
model_log <- lm(LogProfit ~ LogBudget, data = movies)
summary(model_log)
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
install.packages("Hmisc")
library (tidyverse)
library (Hmisc)
movies <- subset(movies, budget >0)
movies$log_budget <- log(movies$budget)
ggplot(movies, aes(x = first_actor_gender, y = log_budget)) +
stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2) +
labs(x = "Gender of First Actor", y = "Log of Budget",
title = "Mean Log of Budget by First Actor Gender with 95% Confidence Interval")
#WRITE YOUR CODE HERE
model <- lm(log_budget ~ movies$first_actor_gender, data = movies,)
summary(model)
percent_effect <- (exp(0.3232)-1)*100
print(percent_effect)
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
library(tidyverse)
profits_by_month<- movies %>%
group_by(release_month) %>%
summarise(meanrevenue=mean(revenue,na.rm=T))
ggplot(profits_by_month, aes(x=factor(release_month), y=meanrevenue))+
geom_col(fill="blue")+
labs(
title="Average revenue per month",
x="Release month",
y="Average profit"
)+
theme_minimal()
#WRITE YOUR CODE HERE
movies$english <- ifelse(movies$original_language == "en", 1, 0)
movies$english<- as.factor(movies$english)
summary(movies)
movies$LogRevenue <- ifelse(movies$revenue > 0, log(movies$revenue), NA)
movies<- movies[movies$profit>0&movies$budget >0,]
model<- lm(LogRevenue ~ LogBudget + english + release_month, data=movies)
summary(model)
#WRITE YOUR CODE HERE
model<- lm(LogRevenue~LogBudget + english+release_month, data=movies)
summary(model)
#WRITE YOUR CODE HERE
model_flex <- lm(LogRevenue ~ LogBudget + english + as.factor(release_month), data = movies)
summary(model_flex)
anova(model, model_flex)
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
install.packages("Hmisc")
#WRITE YOUR CODE HERE
new_movie <- movies(
LogBudget = log(40000000),
english = 1,
release_month = factor(1, levels = 1:12)
)
#WRITE YOUR CODE HERE
new_movie <- as.data.frame(
LogBudget = log(40000000),
english = 1,
release_month = factor(1, levels = 1:12)
)
#WRITE YOUR CODE HERE
new_movie <- data.frame(
LogBudget = log(40000000),
english = 1,
release_month = factor(1, levels = 1:12)
)
View(new_movie)
#WRITE YOUR CODE HERE
new_movie <- data.frame(
LogBudget = log(40000000),
english = 1,
release_month = factor(1, levels = 1:12)
)
prediction <- predict(model_flex, newdata = new_movie,
interval = "prediction", level = 0.99)
#WRITE YOUR CODE HERE
new_movie <- data.frame(
LogBudget = log(40000000),
english = factor(1, levels = levels(movies$english),
release_month = factor(1, levels = 1:12)
))
prediction <- predict(model_flex, newdata = new_movie,
interval = "prediction", level = 0.99)
#WRITE YOUR CODE HERE
new_movie <- data.frame(
LogBudget = log(40000000),
english = factor(1, levels = levels(movies$english)),
release_month = factor(1, levels = 1:12)
)
prediction <- predict(model_flex, newdata = new_movie,
interval = "prediction", level = 0.99)
View(prediction)
exp(prediction)
