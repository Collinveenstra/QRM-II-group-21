movies$log_profits[movies$log_profits<=0]<- NA
movies$log_profits[is.nan(movies$log_profits)] <- NA
mean(movies$log_profits, na.rm = TRUE)
boxplot(movies$log_profits,
main = "Log of Profits",
xlab = "Movies",
ylab = "Log of Profits")
#WRITE YOUR CODE HERE
ggplot(movies, aes(x=runtime, y=vote_average))+
geom_point()+
geom_smooth(method="lm", se=T)
#WRITE YOUR CODE HERE
head(movies$index, n = 10)
nrow(movies)
#WRITE YOUR CODE HERE
actor_counts <- sort(table(movies$first_actor), decreasing = TRUE)
head(actor_counts, 1)
#WRITE YOUR CODE HERE
movies %>%
filter(first_actor=="Bruce Willis") %>%
summarise(average_revenue_Bruce=mean(revenue, na.rm=T))
mean(movies$revenue)
View(movies)
movies_sample <- movies[sample(nrow(movies), 25), ]
View(movies_sample)
var(movies_sample$profit)
#WRITE YOUR CODE HERE
movies_sample <- movies[sample(nrow(movies), 25), ]
variance = var(movies_sample$profit)
variance = var(movies_sample$profit)
#WRITE YOUR CODE HERE
movies_sample <- movies[sample(nrow(movies), 25), ]
variance = var(movies_sample$profit)
#WRITE YOUR CODE HERE
movies_sample <- movies[sample(nrow(movies), 25), ]
variance = var(movies_sample$profit)
#WRITE YOUR CODE HERE
movies_sample <- movies[sample(nrow(movies), 25), ]
variance_sample = var(movies_sample$profit)
#WRITE YOUR CODE HERE
movies$profit = movies$profit/1000000
variance = var(movies$profit)
#WRITE YOUR CODE HERE
movies_sample <- movies[sample(nrow(movies), 25), ]
movies_sample$profit = movies_sample$profit/1000000
variance_sample = var(movies_sample$profit)
#WRITE YOUR CODE HERE
movies_sample <- movies[sample(nrow(movies), 25), ]
movies_sample$profit = movies_sample$profit/1000000
variance_sample = var(movies_sample$profit)
movies_sample <- movies[sample(nrow(movies), 25), ]
#WRITE YOUR CODE HERE
movies_sample <- movies[sample(nrow(movies), 25), ]
variance_sample = var(movies_sample$profit)
#WRITE YOUR CODE HERE
movies_sample <- movies[sample(nrow(movies), 25), ]
variance_sample = var(movies_sample$profit)
#WRITE YOUR CODE HERE
movies_sample <- movies[sample(nrow(movies), 25), ]
variance_sample = var(movies_sample$profit)
#WRITE YOUR CODE HERE
movies_sample <- movies[sample(nrow(movies), 25), ]
variance_sample = var(movies_sample$profit)
#WRITE YOUR CODE HERE
movies_sample <- movies[sample(nrow(movies), 25), ]
variance_sample = var(movies_sample$profit)
#WRITE YOUR CODE HERE
movies_sample <- movies[sample(nrow(movies), 25), ]
variance_sample = var(movies_sample$profit)
#WRITE YOUR CODE HERE
movies_sample <- movies[sample(nrow(movies), 25), ]
variance_sample = var(movies_sample$profit)
#WRITE YOUR CODE HERE
movies_sample <- movies[sample(nrow(movies), 25), ]
variance_sample = var(movies_sample$profit)
#WRITE YOUR CODE HERE
movies_sample <- movies[sample(nrow(movies), 25), ]
variance_sample = var(movies_sample$profit)
#WRITE YOUR CODE HERE
movies_sample <- movies[sample(nrow(movies), 25), ]
variance_sample = var(movies_sample$profit)
#WRITE YOUR CODE HERE
library(dplyr)
set.seed(123)
sample_vars <- c()
for (i in 1:100) {
sample_data <- sample(movies, size = 25, replace = TRUE)
sample_vars[i] <- var(sample_data)
}
View(sample_data)
#WRITE YOUR CODE HERE
library(dplyr)
set.seed(123)
sample_vars <- c()
for (i in 1:100) {
sample_data <- sample(movies, size = 25, replace = TRUE)
sample_vars[i] <- var(sample_data$profit)
}
#WRITE YOUR CODE HERE
library(dplyr)
set.seed(123)
sample_vars <- c()
for (i in 1:100) {
sample_data <- sample(movies$profit, size = 25, replace = TRUE)
sample_vars[i] <- var(sample_data)
}
sample_vars
#WRITE YOUR CODE HERE
ggplot(sample_vars) +
geom_histogram()
sample_data
dfsample_vars = as.data.frame(sample_vars)
View(dfsample_vars)
#WRITE YOUR CODE HERE
dfsample_vars = as.data.frame(sample_vars)
ggplot(dfsample_vars, aes(x = sample_vars)) +
geom_histogram() +
labs(title = "Histogram of sample variances")
print(sample_vars)
ggplot(dfsample_vars, aes(x = sample_vars)) +
geom_histogram(binwidth = 30) +
labs(title = "Histogram of sample variances")
ggplot(dfsample_vars, aes(x = sample_vars)) +
geom_histogram(binwidth = 1) +
labs(title = "Histogram of sample variances")
ggplot(dfsample_vars, aes(x = sample_vars)) +
geom_histogram(binwidth = 1) +
labs(title = "Histogram of sample variances")
ggplot(dfsample_vars, aes(x = sample_vars)) +
geom_histogram(binwidth = 1) +
labs(title = "Histogram of sample variance
ggplot(dfsample_vars, aes(x = sample_vars)) +
geom_histogram(binwidth = 1) +
labs(title = "Histogram of sample
ggplot(dfsample_vars, aes(x = sample_vars)) +
geom_histogram(bins = 30) +
labs(title = "Histogram of sample variances", x = "Sample variances", y = "Frequency")
ggplot(dfsample_vars, aes(x = sample_vars)) +
geom_histogram(bins = 50) +
labs(title = "Histogram of sample variances", x = "Sample variances", y = "Frequency")
ggplot(dfsample_vars, aes(x = sample_vars)) +
geom_histogram(bins = 100) +
labs(title = "Histogram of sample variances", x = "Sample variances", y = "Frequency")
ggplot(dfsample_vars, aes(x = sample_vars)) +
geom_histogram(bins = 60) +
labs(title = "Histogram of sample variances", x = "Sample variances", y = "Frequency")
ggplot(dfsample_vars, aes(x = sample_vars)) +
geom_histogram(bins = 50) +
labs(title = "Histogram of sample variances", x = "Sample variances", y = "Frequency")
dfsample_vars %>%
summarise(mean_sample = mean(sample_vars),
sd_sample = sd(sample_vars))
#WRITE YOUR CODE HERE
dfsample_vars = as.data.frame(sample_vars)
ggplot(dfsample_vars, aes(x = sample_vars)) +
geom_histogram(bins = 50) +
labs(title = "Histogram of sample variances", x = "Sample variances", y = "Frequency")
dfsample_vars %>%
summarise(mean_sample = mean(sample_vars),
sd_sample = sd(sample_vars))
dfsample_vars %>%
summarise(mean_sample = mean(sample_vars),
sd_sample = sd(sample_vars),
skewness_sample = skewness(sample_vars, na.rm=T),
kurtosis_sample = kurtosis(sample_vars, na.rm=T))
#WRITE YOUR CODE HERE
dfsample_vars = as.data.frame(sample_vars)
ggplot(dfsample_vars, aes(x = sample_vars)) +
geom_histogram(bins = 50) +
labs(title = "Histogram of sample variances", x = "Sample variances", y = "Frequency")
dfsample_vars %>%
summarise(mean_sample = mean(sample_vars),
sd_sample = sd(sample_vars))
skewness_sample = skewness(sample_vars, na.rm=T)
kurtosis_sample = kurtosis(sample_vars, na.rm=T)
install.packages("e1071")
library(e1071)
skewness_sample = skewness(sample_vars, na.rm=T)
kurtosis_sample = kurtosis(sample_vars, na.rm=T)
print(skewness_sample, kurtosis_sample)
print(kurtosis_sample)
print(skewness_sample)
#WRITE YOUR CODE HERE
dfsample_vars = as.data.frame(sample_vars)
ggplot(dfsample_vars, aes(x = sample_vars)) +
geom_histogram(bins = 50) +
labs(title = "Histogram of sample variances", x = "Sample variances", y = "Frequency")
dfsample_vars %>%
summarise(mean_sample = mean(sample_vars),
sd_sample = sd(sample_vars))
install.packages("e1071")
library(e1071)
skewness_sample = skewness(sample_vars, na.rm=T)
kurtosis_sample = kurtosis(sample_vars, na.rm=T)
print(skewness_sample)
print(kurtosis_sample)
install.packages("e1071")
install.packages("tinytex")
install.packages("tinytex")
library(tinytex)
library(tinytex)
install_tinytex()
install_tinytex()
\Y
is_tinytex()
install_tinytex()
ggplot(movies, aes(x = first_actor_gender, y = log_profits))
library(tidyverse)
ggplot(movies, aes(x = first_actor_gender, y = log_profits))
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) + stat_summary(fun = mean, geom = "point", size = 3)
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) + stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0,2)+
labs (x = "Gender of First Actor", y = "Log (Profit)",
title = "Mean Log (Profit) by First Actor Gender with 95% Confidence Interval") +
theme_minimal()
rlang::last_trace()
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) + stat_summary(fun = mean, geom = "point", size = 3) +
labs (x = "Gender of First Actor", y = "Log (Profit)",
title = "Mean Log (Profit) by First Actor Gender with 95% Confidence Interval") +
theme_minimal()
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) + stat_summary(fun = mean, geom = "point", size = 3) +
labs (x = "Gender of First Actor", y = "Log (Profit)",
title = "Mean Log (Profit) by First Actor Gender with 95% Confidence Interval") +
theme_minimal()
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) + stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0,2)+
labs (x = "Gender of First Actor", y = "Log (Profit)",
title = "Mean Log (Profit) by First Actor Gender with 95% Confidence Interval") +
theme_minimal()
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) + stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0,2)+
labs (x = "Gender of First Actor", y = "Log (Profit)",
title = "Mean Log (Profit) by First Actor Gender with 95% Confidence Interval") +
theme_minimal()
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) + stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0,2)+
labs (x = "Gender of First Actor", y = "Log (Profit)",
title = "Mean Log (Profit) by First Actor Gender with 95% Confidence Interval") +
theme_minimal()
movies$first_actor_gender <- factor(movies$first_actor, labels = c("Female", "Male"))
movies$log_budget <- log(movies$budget)
movies <- subset(movies, budget >0)
movies$log_budget <- log(movies$budget)
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) +
stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2) +
labs(x = "Gender of First Actor", y = "Log of Budget"), title = "Mean Log of Budget by First Actor Gender wit 95% Confidence Interval"
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) +
stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2)
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) +
stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2) +
labs(x = "Gender of First Actor", y = "Log of Budget",
title = "Mean Log of Budget by First Actor Gender with 95% Confidence Interval")
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) +
stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2) +
labs(x = "Gender of First Actor", y = "Log of Budget",
title = "Mean Log of Budget by First Actor Gender with 95% Confidence Interval") + theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
#WRITE YOUR CODE HERE
install.packages("Hmisc")
library (tidyverse)
library (Hmisc)
movies <- subset(movies, budget >0)
movies$log_budget <- log(movies$budget)
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) +
stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2) +
labs(x = "Gender of First Actor", y = "Log of Budget",
title = "Mean Log of Budget by First Actor Gender with 95% Confidence Interval")
install.packages("Hmisc")
knitr::opts_chunk$set(echo = TRUE)
#WRITE YOUR CODE HERE
install.packages("Hmisc")
library (tidyverse)
library (Hmisc)
movies <- subset(movies, budget >0)
movies$log_budget <- log(movies$budget)
ggplot(movies, aes(x = first_actor_gender, y = log_profits)) +
stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2) +
labs(x = "Gender of First Actor", y = "Log of Budget",
title = "Mean Log of Budget by First Actor Gender with 95% Confidence Interval")
#WRITE YOUR CODE HERE
install.packages("Hmisc")
library (tidyverse)
library (Hmisc)
movies <- subset(movies, budget >0)
movies$log_budget <- log(movies$budget)
ggplot(movies, aes(x = first_actor_gender, y = log_budget)) +
stat_summary(fun = mean, geom = "point", size = 3) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2) +
labs(x = "Gender of First Actor", y = "Log of Budget",
title = "Mean Log of Budget by First Actor Gender with 95% Confidence Interval")
install.packages("Hmisc")
model <- lm(log_budget ~ movies$first_actor_gender == "Male", data = movies)
View(model)
summary(model)
knitr::opts_chunk$set(echo = TRUE)
#WRITE YOUR CODE HERE
movies <- read.table("movies1.tsv", header=TRUE)
model <- lm(revenue ~ budget, data = movies)
summary(model)
#WRITE YOUR CODE HERE
summary(model)
#WRITE YOUR CODE HERE
summary(model)
#WRITE YOUR CODE HERE
summary(model)
coefs <- summary(model)$coefficients
t_val <- coefs["Budget", "t value"]
t_val <- coefs["budget", "t value"]
p_value <- pt(t_val, df = model$df.residual, lower.tail = TRUE)
p_value
p_value <- pt(t_val, df = model$df.residual, lower.tail = FALSE)
#WRITE YOUR CODE HERE
coefs <- summary(model)$coefficients
t_val <- coefs["budget", "t value"]
p_value <- pt(t_val, df = model$df.residual, lower.tail = FALSE)
print(p_value)
View(movies)
#WRITE YOUR CODE HERE
movies$profit <- movies$revenue - movies$budget
View(movies)
#WRITE YOUR CODE HERE
movies$profit <- movies$revenue - movies$budget
movies$LogProfit <- ifelse(movies$profit > 0, log(movies$profit), NA)
movies$LogBudget <- ifelse(movies$budget > 0, log(movies$budget), NA)
View(movies)
View(movies)
#WRITE YOUR CODE HERE
movies$profit <- movies$revenue - movies$budget
movies$LogProfit <- ifelse(movies$profit > 0, log(movies$profit), NA)
movies$LogBudget <- ifelse(movies$budget > 0, log(movies$budget), NA)
model_log <- lm(LogProfit ~ LogBudget, data = movies)
summary(model_log)
#WRITE YOUR CODE HERE
coefs <- summary(model)$coefficients
t_val <- coefs["budget", "t value"]
p_value <- pt(t_val, df = model$df.residual, lower.tail = FALSE)
print(p_value)
#WRITE YOUR CODE HERE
movies$profit <- movies$revenue - movies$budget
movies$LogProfit <- ifelse(movies$profit > 0, log(movies$profit), NA)
movies$LogBudget <- ifelse(movies$budget > 0, log(movies$budget), NA)
model_log <- lm(LogProfit ~ LogBudget, data = movies)
summary(model_log)
#WRITE YOUR CODE HERE
movies <- read.table("movies1.tsv", header=TRUE)
model <- lm(revenue ~ budget, data = movies)
summary(model)
#WRITE YOUR CODE HERE
profits_by_month<- movies %>%
group_by(release_month) %>%
summarise(meanrevenue=mean(revenue,na.rm=T))
ggplot(profits_by_month, aes(x=factor(release_month), y=meanrevenue))+
geom_col(fill="blue")+
labs(
title="Average revenue per month",
x="Release month",
y="Average profit"
)+
theme_minimal()
#WRITE YOUR CODE HERE
str(movies)
movies$english<- as.factor(movies$english)
#WRITE YOUR CODE HERE
model<- lm(log_revenue~log_budget + english+release_month, data=movies)
summary(model)
#WRITE YOUR CODE HERE
profits_by_month<- movies %>%
group_by(release_month) %>%
summarise(meanrevenue=mean(revenue,na.rm=T))
ggplot(profits_by_month, aes(x=factor(release_month), y=meanrevenue))+
geom_col(fill="blue")+
labs(
title="Average revenue per month",
x="Release month",
y="Average profit"
)+
theme_minimal()
library(tidyverse)
#WRITE YOUR CODE HERE
profits_by_month<- movies %>%
group_by(release_month) %>%
summarise(meanrevenue=mean(revenue,na.rm=T))
ggplot(profits_by_month, aes(x=factor(release_month), y=meanrevenue))+
geom_col(fill="blue")+
labs(
title="Average revenue per month",
x="Release month",
y="Average profit"
)+
theme_minimal()
#WRITE YOUR CODE HERE
str(movies)
movies$english<- as.factor(movies$english)
#WRITE YOUR CODE HERE
model<- lm(log_revenue~log_budget + english+release_month, data=movies)
summary(model)
View(movies)
movies$log_revenue<- log(movies$revenue)
movies$log_budget<-log(movies$budget)
movies<- movies[movies$profit>0&movies$budget >0,]
model<- lm(log_revenue~log_budget+english+release_month, data=movies)
summary(model)
movies$english<- as.factor(movies$english)
#WRITE YOUR CODE HERE
str(movies)
movies$english<- as.factor(movies$english)
summary(movies)
movies$log_revenue<- log(movies$revenue)
movies$log_budget<-log(movies$budget)
movies<- movies[movies$profit>0&movies$budget >0,]
model<- lm(log_revenue~log_budget+english+release_month, data=movies)
#WRITE YOUR CODE HERE
model<- lm(log_revenue~log_budget + english+release_month, data=movies)
knitr::opts_chunk$set(echo = TRUE)
#WRITE YOUR CODE HERE
profits_by_month<- movies %>%
group_by(release_month) %>%
summarise(meanrevenue=mean(revenue,na.rm=T))
ggplot(profits_by_month, aes(x=factor(release_month), y=meanrevenue))+
geom_col(fill="blue")+
labs(
title="Average revenue per month",
x="Release month",
y="Average profit"
)+
theme_minimal()
#WRITE YOUR CODE HERE
library(tidyverse)
profits_by_month<- movies %>%
group_by(release_month) %>%
summarise(meanrevenue=mean(revenue,na.rm=T))
ggplot(profits_by_month, aes(x=factor(release_month), y=meanrevenue))+
geom_col(fill="blue")+
labs(
title="Average revenue per month",
x="Release month",
y="Average profit"
)+
theme_minimal()
View(movies)
movies$english <- ifelse(movies$original_language = "en", 1, 0)
movies$english <- ifelse(movies$original_language == "en", 1, 0)
#WRITE YOUR CODE HERE
str(movies)
movies$english <- ifelse(movies$original_language == "en", 1, 0)
movies$english<- as.factor(movies$english)
summary(movies)
movies$log_revenue<- log(movies$revenue)
movies$log_budget<-log(movies$budget)
movies<- movies[movies$profit>0&movies$budget >0,]
model<- lm(log_revenue~log_budget+english+release_month, data=movies)
#WRITE YOUR CODE HERE
str(movies)
movies$english <- ifelse(movies$original_language == "en", 1, 0)
movies$english<- as.factor(movies$english)
summary(movies)
movies$log_revenue<- log(movies$revenue)
movies$log_budget<-log(movies$budget)
movies<- movies[movies$profit>0&movies$budget >0,]
model<- lm(log_revenue ~ log_budget + english + release_month, data=movies)
#WRITE YOUR CODE HERE
movies$profit <- movies$revenue - movies$budget
movies$LogProfit <- ifelse(movies$profit > 0, log(movies$profit), NA)
movies$LogBudget <- ifelse(movies$budget > 0, log(movies$budget), NA)
model_log <- lm(LogProfit ~ LogBudget, data = movies)
#WRITE YOUR CODE HERE
movies <- read.table("movies1.tsv", header=TRUE)
model <- lm(revenue ~ budget, data = movies)
summary(model)
#WRITE YOUR CODE HERE
movies$profit <- movies$revenue - movies$budget
movies$LogProfit <- ifelse(movies$profit > 0, log(movies$profit), NA)
movies$LogBudget <- ifelse(movies$budget > 0, log(movies$budget), NA)
model_log <- lm(LogProfit ~ LogBudget, data = movies)
summary(model_log)
#WRITE YOUR CODE HERE
str(movies)
movies$english <- ifelse(movies$original_language == "en", 1, 0)
movies$english<- as.factor(movies$english)
summary(movies)
movies<- movies[movies$profit>0&movies$budget >0,]
model<- lm(log_revenue ~ log_budget + english + release_month, data=movies)
summary(model)
View(movies)
movies$LogRevenue <- ifelse(movies$revenue > 0, log(movies$revenue), NA)
#WRITE YOUR CODE HERE
str(movies)
movies$english <- ifelse(movies$original_language == "en", 1, 0)
movies$english<- as.factor(movies$english)
summary(movies)
movies$LogRevenue <- ifelse(movies$revenue > 0, log(movies$revenue), NA)
movies<- movies[movies$profit>0&movies$budget >0,]
model<- lm(log_revenue ~ log_budget + english + release_month, data=movies)
summary(model)
#WRITE YOUR CODE HERE
str(movies)
movies$english <- ifelse(movies$original_language == "en", 1, 0)
movies$english<- as.factor(movies$english)
summary(movies)
movies$LogRevenue <- ifelse(movies$revenue > 0, log(movies$revenue), NA)
movies<- movies[movies$profit>0&movies$budget >0,]
model<- lm(LogRevenue ~ LogBudget + english + release_month, data=movies)
summary(model)
#WRITE YOUR CODE HERE
model<- lm(LogRevenue~LogBudget + english+release_month, data=movies)
summary(model)
