labs(title = "Histogram of sample variances", x = "Sample variances", y = "Frequency")
dfsample_vars %>%
summarise(mean_sample = mean(sample_vars),
sd_sample = sd(sample_vars))
dfsample_vars %>%
summarise(mean_sample = mean(sample_vars),
sd_sample = sd(sample_vars),
skewness_sample = skewness(sample_vars, na.rm=T),
kurtosis_sample = kurtosis(sample_vars, na.rm=T))
#WRITE YOUR CODE HERE
dfsample_vars = as.data.frame(sample_vars)
ggplot(dfsample_vars, aes(x = sample_vars)) +
geom_histogram(bins = 50) +
labs(title = "Histogram of sample variances", x = "Sample variances", y = "Frequency")
dfsample_vars %>%
summarise(mean_sample = mean(sample_vars),
sd_sample = sd(sample_vars))
skewness_sample = skewness(sample_vars, na.rm=T)
kurtosis_sample = kurtosis(sample_vars, na.rm=T)
install.packages("e1071")
library(e1071)
skewness_sample = skewness(sample_vars, na.rm=T)
kurtosis_sample = kurtosis(sample_vars, na.rm=T)
print(skewness_sample, kurtosis_sample)
print(kurtosis_sample)
print(skewness_sample)
#WRITE YOUR CODE HERE
dfsample_vars = as.data.frame(sample_vars)
ggplot(dfsample_vars, aes(x = sample_vars)) +
geom_histogram(bins = 50) +
labs(title = "Histogram of sample variances", x = "Sample variances", y = "Frequency")
dfsample_vars %>%
summarise(mean_sample = mean(sample_vars),
sd_sample = sd(sample_vars))
install.packages("e1071")
library(e1071)
skewness_sample = skewness(sample_vars, na.rm=T)
kurtosis_sample = kurtosis(sample_vars, na.rm=T)
print(skewness_sample)
print(kurtosis_sample)
install.packages("e1071")
knitr::opts_chunk$set(echo = TRUE)
#WRITE YOUR CODE HERE
thriller_movies <- subset(movies, grepl("Thriller", genre, ignore.case = FALSE))
t_result = t.test(thriller_movies$runtime, conf.level = 0.99)
conf_interval = t_result$conf.int
print(conf_interval)
View(t_result)
#WRITE YOUR CODE HERE
mean_runtime = mean(thriller_movies$runtime)
sd_runtime = sd(thriller_movies$runtime)
n = length(thriller_movies$runtime)
sd_population = sd_runtime
z = qnorm(0.995)
error = z*(sd_population/sqrt(n))
LOW = mean_runtime - error
UP = mean_runtime + error
print(c(LOW, UP))
#WRITE YOUR CODE HERE
s2 = var(movies$runtime, na.rm = TRUE)
n = sum(!is.na(movies$runtime))
# Hypothesized variance
sigma2 <- 500
# Test statistic
test_statistic <- (n - 1) * s2 / sigma2
# Print test statistic
cat("test statistic:", round(test_statistic, 2), "\n")
#critical value
alpha <- 0.05
lower <- qchisq(alpha / 2, df = n2 - 1)
upper <- qchisq(1 - alpha / 2, df = n2 - 1)
#print
cat("Critical values:\n")
cat("Lower:", round(lower, 2), "\n")
cat("Upper:", round(upper, 2), "\n")
#compare test statistic with the critical
if (chi_sq < lower || chi_sq > upper) {
cat("Reject the null hypothesis.\n")
} else {
cat("Do not reject the null hypothesis.\n")
}
#WRITE YOUR CODE HERE
s2 = var(movies$runtime, na.rm = TRUE)
n = sum(!is.na(movies$runtime))
# Hypothesized variance
sigma2 <- 500
# Test statistic
test_statistic <- (n - 1) * s2 / sigma2
# Print test statistic
cat("test statistic:", round(test_statistic, 2), "\n")
#critical value
alpha <- 0.05
lower <- qchisq(alpha / 2, df = n2 - 1)
upper <- qchisq(1 - alpha / 2, df = n2 - 1)
#print
cat("Critical values:\n")
cat("Lower:", round(lower, 2), "\n")
cat("Upper:", round(upper, 2), "\n")
#compare test statistic with the critical
if (chi_sq < lower || chi_sq > upper) {
cat("Reject the null hypothesis.\n")
} else {
cat("Do not reject the null hypothesis.\n")
}
alpha <- 0.05
lower <- qchisq(alpha / 2, df = n2 - 1)
upper <- qchisq(1 - alpha / 2, df = n2 - 1)
```{r}
#WRITE YOUR CODE HERE
s2 = var(movies$runtime, na.rm = TRUE)
n = sum(!is.na(movies$runtime))
# Hypothesized variance
sigma2 <- 500
# Test statistic
test_statistic <- (n - 1) * s2 / sigma2
# Print test statistic
cat("test statistic:", round(test_statistic, 2), "\n")
#critical value
alpha <- 0.05
lower <- qchisq(alpha / 2, df = n - 1)
upper <- qchisq(1 - alpha / 2, df = n - 1)
#print
cat("Critical values:\n")
cat("Lower:", round(lower, 2), "\n")
cat("Upper:", round(upper, 2), "\n")
#compare test statistic with the critical
if (chi_sq < lower || chi_sq > upper) {
cat("Reject the null hypothesis.\n")
} else {
cat("Do not reject the null hypothesis.\n")
}
knitr::opts_chunk$set(echo = TRUE)
movies <- read.table("movies1.tsv", header=TRUE)
head(movies)
ncol(movies)
nrow(movies)
#WRITE YOUR CODE HERE
str(movies)
library(tidyverse)
movies$profit = movies$revenue - movies$budget
movies %>%
summarise(mean(profit),
median(profit),
min(profit),
max(profit))
#WRITE YOUR CODE HERE
max_profit = max(movies$profit)
min_profit = min(movies$profit)
movies %>%
filter(profit == max_profit) %>%
select(title, profit)
movies %>%
filter(profit == min_profit) %>%
select(title, profit)
#WRITE YOUR CODE HERE
boxplot(movies$profit,
main="Variable Profit",
ylab="Profit",
xlab="Movies")
movies %>%
summarise(Q1 = quantile(movies$profit, 0.25),
Q2 = quantile(movies$profit, 0.50),
Q3 = quantile(movies$profit, 0.75),
Q4 = max(movies$profit))
boxplot(movies$profit,
main='Variable Profit',
ylab="Profit",
xlab="Movies",
outline = FALSE)
#WRITE YOUR CODE HERE
movies$log_profits = log(movies$profit)
movies %>%
summarise(mean_profits = mean(movies$log_profits))
movies %>%
summarise(mean_profits2 = mean(log_profits[is.finite(log_profits)], na.rm = TRUE))
#WRITE YOUR CODE HERE
movies$log_profits[movies$log_profits<=0]<- NA
movies$log_profits[is.nan(movies$log_profits)] <- NA
mean(movies$log_profits, na.rm = TRUE)
boxplot(movies$log_profits,
main = "Log of Profits",
xlab = "Movies",
ylab = "Log of Profits")
#WRITE YOUR CODE HERE
ggplot(movies, aes(x=runtime, y=vote_average))+
geom_point()+
geom_smooth(method="lm", se=T)
#WRITE YOUR CODE HERE
head(movies$index, n = 10)
nrow(movies)
#WRITE YOUR CODE HERE
actor_counts <- sort(table(movies$first_actor), decreasing = TRUE)
head(actor_counts, 1)
#WRITE YOUR CODE HERE
movies %>%
filter(first_actor=="Bruce Willis") %>%
summarise(average_revenue_Bruce=mean(revenue, na.rm=T))
mean(movies$revenue)
#WRITE YOUR CODE HERE
movies$profit = movies$profit/1000000
variance = var(movies$profit)
#WRITE YOUR CODE HERE
set.seed(123)
movies_sample <- movies[sample(nrow(movies), 25), ]
variance_sample = var(movies_sample$profit)
#WRITE YOUR CODE HERE
library(dplyr)
set.seed(123)
sample_vars <- c()
for (i in 1:100) {
sample_data <- sample(movies$profit, size = 25, replace = TRUE)
sample_vars[i] <- var(sample_data)
}
print(sample_vars)
#WRITE YOUR CODE HERE
dfsample_vars = as.data.frame(sample_vars)
ggplot(dfsample_vars, aes(x = sample_vars)) +
geom_histogram(bins = 50) +
labs(title = "Histogram of sample variances", x = "Sample variances", y = "Frequency")
dfsample_vars %>%
summarise(mean_sample = mean(sample_vars),
sd_sample = sd(sample_vars))
library(e1071)
skewness_sample = skewness(sample_vars, na.rm=T)
kurtosis_sample = kurtosis(sample_vars, na.rm=T)
print(skewness_sample)
print(kurtosis_sample)
#WRITE YOUR CODE HERE
thriller_movies <- subset(movies, grepl("Thriller", genre, ignore.case = FALSE))
t_result = t.test(thriller_movies$runtime, conf.level = 0.99)
conf_interval = t_result$conf.int
print(conf_interval)
#WRITE YOUR CODE HERE
mean_runtime = mean(thriller_movies$runtime)
sd_runtime = sd(thriller_movies$runtime)
n = length(thriller_movies$runtime)
sd_population = sd_runtime
z = qnorm(0.995)
error = z*(sd_population/sqrt(n))
LOW = mean_runtime - error
UP = mean_runtime + error
print(c(LOW, UP))
#WRITE YOUR CODE HERE
s2 = var(movies$runtime, na.rm = TRUE)
n = sum(!is.na(movies$runtime))
# Hypothesized variance
sigma2 <- 500
# Test statistic
test_statistic <- (n - 1) * s2 / sigma2
# Print test statistic
cat("test statistic:", round(test_statistic, 2), "\n")
#critical value
alpha <- 0.05
lower <- qchisq(alpha / 2, df = n - 1)
upper <- qchisq(1 - alpha / 2, df = n - 1)
#print
cat("Critical values:\n")
cat("Lower:", round(lower, 2), "\n")
cat("Upper:", round(upper, 2), "\n")
#compare test statistic with the critical
if (chi_sq < lower || chi_sq > upper) {
cat("Reject the null hypothesis.\n")
} else {
cat("Do not reject the null hypothesis.\n")
}
#WRITE YOUR CODE HERE
ggplot(movies, aes(x = revenue))+
geom_histogram()+
labs(title = "Histogram of revenue",
y = "frequency")
ggplot(movies, aes(sample = revenue)) +
stat_qq() +
stat_qq_line(color = "purple") +
labs(title = "Normal QQ plot",
x = "Theoretical Quantiles",
y = "Sample Quantilies") +
theme_minimal()
#WRITE YOUR CODE HERE
movies$vote_average_rounded <- floor(movies$vote_average)
ggplot(movies, aes(x = vote_average_rounded)) +
geom_histogram(binwidth = 1) +
labs(title = "Histogram of Rounded Vote Averages",
x = "Vote Average",
y = "Frequency")
#WRITE YOUR CODE HERE
profit_movies <- movies %>%
group_by(vote_average_rounded) %>%
summarise(profit_mean = mean(profit, na.rm = TRUE))
ggplot(profit_movies, aes(x = vote_average_rounded, y = profit_mean)) +
geom_point(size = 3) +
geom_line() +
labs(
title = "Average Profit by Rounded Vote Average",
x = "Rounded Vote Average",
y = "Average Profit"
)
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
#WRITE YOUR CODE HERE
s2 = var(movies$runtime, na.rm = TRUE)
n = sum(!is.na(movies$runtime))
# Hypothesized variance
sigma2 <- 500
# Test statistic
test_statistic <- (n - 1) * s2 / sigma2
# Print test statistic
cat("test statistic:", round(test_statistic, 2), "\n")
#critical value
alpha <- 0.05
lower <- qchisq(alpha / 2, df = n - 1)
upper <- qchisq(1 - alpha / 2, df = n - 1)
#print
cat("Critical values:\n")
cat("Lower:", round(lower, 2), "\n")
cat("Upper:", round(upper, 2), "\n")
#compare test statistic with the critical
if (test_statistic < lower || test_statistic > upper) {
cat("Reject the null hypothesis.\n")
} else {
cat("Do not reject the null hypothesis.\n")
}
#compare test statistic with the critical
print(if (test_statistic < lower || test_statistic > upper) {
cat("Reject the null hypothesis.\n")
} else {
cat("Do not reject the null hypothesis.\n")
})
#WRITE YOUR CODE HERE
s2 = var(movies$runtime, na.rm = TRUE)
n = sum(!is.na(movies$runtime))
# Hypothesized variance
sigma2 <- 500
# Test statistic
test_statistic <- (n - 1) * s2 / sigma2
# Print test statistic
cat("test statistic:", round(test_statistic, 2), "\n")
#critical value
alpha <- 0.05
lower <- qchisq(alpha / 2, df = n - 1)
upper <- qchisq(1 - alpha / 2, df = n - 1)
#print
cat("Critical values:\n")
cat("Lower:", round(lower, 2), "\n")
cat("Upper:", round(upper, 2), "\n")
#compare test statistic with the critical
if (test_statistic < lower || test_statistic > upper) {
cat("Reject the null hypothesis.\n")
} else {
cat("Do not reject the null hypothesis.\n")
}
#WRITE YOUR CODE HERE
profit_movies <- movies %>%
group_by(vote_average_rounded) %>%
summarise(profit_mean = mean(profit, na.rm = TRUE))
ggplot(profit_movies, aes(x = vote_average_rounded, y = profit_mean)) +
geom_point(size = 3) +
geom_line() +
labs(
title = "Average Profit by Rounded Vote Average",
x = "Rounded Vote Average",
y = "Average Profit"
)
View(profit_movies)
#WRITE YOUR CODE HERE
movies$vote_average_rounded <- floor(movies$vote_average)
ggplot(movies, aes(x = vote_average_rounded)) +
geom_histogram(binwidth = 1) +
labs(title = "Histogram of Rounded Vote Averages",
x = "Vote Average",
y = "Frequency")
ggplot(movies, aes(x = vote_average_rounded)) +
geom_histogram(bins = 8) +
labs(title = "Histogram of Rounded Vote Averages",
x = "Vote Average",
y = "Frequency")
labs(title = "Histogram of Rounded Vote Averages",
x = "Vote Average",
y = "Frequency")
labs(title = "Histogram of Rounded Vote Averages",
x = "Vote Average",
y = "Frequency")
#WRITE YOUR CODE HERE
movies$vote_average_rounded <- floor(movies$vote_average)
ggplot(movies, aes(x = vote_average_rounded)) +
geom_histogram(bins = 8) +
labs(title = "Histogram of Rounded Vote Averages",
x = "Vote Average",
y = "Frequency")
#WRITE YOUR CODE HERE
movies$vote_average_rounded <- floor(movies$vote_average)
ggplot(movies, aes(x = vote_average_rounded)) +
geom_histogram(bins = 8) +
scale_x_continuous(breaks = seq(1,8, by = 1), limits = c(1,8))
labs(title = "Histogram of Rounded Vote Averages",
x = "Vote Average",
y = "Frequency")
labs(title = "Histogram of Rounded Vote Averages",
x = "Vote Average",
y = "Frequency")
#WRITE YOUR CODE HERE
movies$vote_average_rounded <- floor(movies$vote_average)
ggplot(movies, aes(x = vote_average_rounded)) +
geom_histogram(bins = 8) +
scale_x_continuous(breaks = seq(1,8, by = 1), limits = c(1,9))
labs(title = "Histogram of Rounded Vote Averages",
x = "Vote Average",
y = "Frequency")
#WRITE YOUR CODE HERE
movies$vote_average_rounded <- floor(movies$vote_average)
ggplot(movies, aes(x = vote_average_rounded)) +
geom_histogram(bins = 8) +
scale_x_continuous(breaks = seq(1,8, by = 1), limits = c(0,9))
labs(title = "Histogram of Rounded Vote Averages",
x = "Vote Average",
y = "Frequency")
#WRITE YOUR CODE HERE
movies$vote_average_rounded <- floor(movies$vote_average)
ggplot(movies, aes(x = vote_average_rounded)) +
geom_histogram(bins = 8) +
scale_x_continuous(breaks = seq(1,8, by = 1), limits = c(0,8))
labs(title = "Histogram of Rounded Vote Averages",
x = "Vote Average",
y = "Frequency")
#WRITE YOUR CODE HERE
movies$vote_average_rounded <- floor(movies$vote_average)
ggplot(movies, aes(x = vote_average_rounded)) +
geom_histogram(bins = 8) +
scale_x_continuous(breaks = seq(1,8, by = 1)
labs(title = "Histogram of Rounded Vote Averages",
x = "Vote Average",
y = "Frequency")
#WRITE YOUR CODE HERE
movies$vote_average_rounded <- floor(movies$vote_average)
ggplot(movies, aes(x = vote_average_rounded)) +
geom_histogram(bins = 8) +
scale_x_continuous(breaks = seq(1,8, by = 1) +
labs(title = "Histogram of Rounded Vote Averages",
x = "Vote Average",
y = "Frequency")
#WRITE YOUR CODE HERE
movies$vote_average_rounded <- floor(movies$vote_average)
ggplot(movies, aes(x = vote_average_rounded)) +
geom_histogram(bins = 8) +
scale_x_continuous(breaks = seq(1,8, by = 1)) +
labs(title = "Histogram of Rounded Vote Averages",
x = "Vote Average",
y = "Frequency")
View(profit_movies)
#WRITE YOUR CODE HERE
movies$vote_average_rounded <- floor(movies$vote_average)
ggplot(movies, aes(x = vote_average_rounded)) +
geom_histogram(bins = 8) +
scale_x_continuous(breaks = seq(0,8, by = 1)) +
labs(title = "Histogram of Rounded Vote Averages",
x = "Vote Average",
y = "Frequency")
View(profit_movies)
#WRITE YOUR CODE HERE
movies$vote_average_rounded <- floor(movies$vote_average)
ggplot(movies, aes(x = vote_average_rounded)) +
geom_histogram(bins = 8) +
scale_x_continuous(breaks = seq(0,8, by = 1)) +
labs(title = "Histogram of Rounded Vote Averages",
x = "Vote Average",
y = "Frequency")
#WRITE YOUR CODE HERE
profit_movies <- movies %>%
group_by(vote_average_rounded) %>%
summarise(profit_mean = mean(profit, na.rm = TRUE))
ggplot(profit_movies, aes(x = vote_average_rounded, y = profit_mean)) +
geom_point(size = 3) +
geom_line() +
labs(
title = "Average Profit by Rounded Vote Average",
x = "Rounded Vote Average",
y = "Average Profit"
)
#WRITE YOUR CODE HERE
profit_by_year <- movies %>%
group_by(release_year) %>%
summarise(
profit_mean = mean(profit, na.rm = TRUE),
sd = sd(profit, na.rm = TRUE),
n = n(),
se = sd / sqrt(n),
lower = profit_mean - 1.96 * se,
upper = profit_mean + 1.96 * se
)
ggplot(profit_by_year, aes(x = release_year, y = profit_mean)) +
geom_point(size = 2, color = "darkblue") +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.3, color = "darkblue") +
labs(
title = "Average Profit per Year (95% Confidence Interval)",
x = "Release Year",
y = "Average Profit"
) +
theme_minimal()
